<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="DocAnswerMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="docAnswerMap"
		type="fdp.project.spring.model.DocAnswer">
		<!-- Beans의 멤버변수(property) 이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="docAnswer_id" column="docAnswer_id" />
		<result property="writer_name" column="writer_name" />
		<result property="content" column="content" />
		<result property="reg_date" column="reg_date" />
		<result property="edit_date" column="edit_date" />
		<result property="medical_field" column="medical_field" />
		<result property="fdpmember_id" column="fdpmember_id" />
		<result property="document_id" column="document_id" />
	</resultMap>

	<!-- 단일행 조회를 위한 기능 정의 -->
	
	<select id="selectItem"
		parameterType="fdp.project.spring.model.DocAnswer"
		resultMap="docAnswerMap">
		SELECT docAnswer_id, writer_name, content, reg_date,
		edit_date, medical_field, fdpmember_id, document_id
		FROM docanswer
		WHERE
		docAnswer_id=#{docAnswer_id};

	</select>
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="fdp.project.spring.model.DocAnswer"
		resultMap="docAnswerMap">
		SELECT docAnswer_id, writer_name, content, reg_date,
		edit_date, medical_field, fdpmember_id, document_id FROM docanswer
		WHERE
		document_id = #{document_id}
		ORDER BY reg_date DESC
	</select>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="fdp.project.spring.model.DocAnswer"
		useGeneratedKeys="true" keyProperty="docAnswer_id">
		INSERT INTO docanswer (writer_name,
		content, reg_date, edit_date, medical_field, fdpmember_id,
		document_id)
		VALUES (#{writer_name}, #{content}, #{reg_date},
		#{edit_date},
		#{medical_field}, #{fdpmember_id}, #{document_id});
	</insert>

	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="fdp.project.spring.model.DocAnswer">
		DELETE FROM docanswer WHERE
		docAnswer_id=#{docAnswer_id} || document_id=#{document_id};
	</delete>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="fdp.project.spring.model.DocAnswer">
		UPDATE docanswer SET writer_name=#{writer_name}, content=#{content},
		reg_date=#{reg_date}, edit_date=#{edit_date}
		<!-- ,medical_field=#{medical_field} -->
		WHERE
		docAnswer_id=#{docAnswer_id};
	</update>

	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. count, max, min, sum, avg 함수를 사용한 
		경우 Mapper에서는 resultMap이 아닌 resulType으로 반환한다. -->
	<select id="selectCountAll"
		parameterType="fdp.project.spring.model.DocAnswer" resultType="int">
		SELECT COUNT(*) FROM docanswer

		<where>
			<if test="writer_name != null and writer_name != ''">
				writer_name LIKE concat('%', #{writer_name}, '%')
			</if>

		</where>
	</select>
</mapper>