<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CommentMapper">
	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="commentMap"
		type="fdp.project.spring.model.Comment">
		<!-- Beans의 멤버변수(property) 이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="comment_id" column="comment_id" />
		<result property="writer_name" column="writer_name" />
		<result property="content" column="content" />
		<result property="reg_date" column="reg_date" />
		<result property="edit_date" column="edit_date" />
		<result property="document_id" column="document_id" />
		<result property="fdpmember_id" column="fdpmember_id" />
	</resultMap>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="fdp.project.spring.model.Comment"
		resultMap="commentMap">
		SELECT comment_id, writer_name, content, reg_date,
		edit_date, document_id, fdpmember_id
		FROM comment WHERE
		comment_id=#{comment_id}
		ORDER BY reg_date DESC

	</select>
	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="fdp.project.spring.model.Comment"
		resultMap="commentMap">
		SELECT comment_id, writer_name, content, reg_date, edit_date,
		document_id, fdpmember_id
		FROM comment
		where document_id=#{document_id};
		

		
	</select>

	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="fdp.project.spring.model.Comment"
		useGeneratedKeys="true" keyProperty="comment_id">
		INSERT INTO comment (writer_name,
		content, reg_date, edit_date, document_id, fdpmember_id)
		VALUES
		(#{writer_name}, #{content}, #{reg_date}, #{edit_date},
		#{document_id}, #{fdpmember_id});
	</insert>

	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="fdp.project.spring.model.Comment">
		DELETE FROM comment WHERE comment_id=#{comment_id} ||
		document_id=#{document_id};
	</delete>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="fdp.project.spring.model.Comment">
		UPDATE comment SET writer_name=#{writer_name},
		content=#{content}, <!-- reg_date=#{reg_date}, --> edit_date=#{edit_date},
		document_id=#{document_id}, fdpmember_id=#{fdpmember_id}
		WHERE
		comment_id=#{comment_id};
	</update>

	<!-- 조건에 맞는 데이터 수를 집계하여 int 타입으로 반환한다. count, max, min, sum, avg 함수를 사용한 
		경우 Mapper에서는 resultMap이 아닌 resulType으로 반환한다. -->
	<select id="selectCountAll"
		parameterType="fdp.project.spring.model.Comment" resultType="int">
		SELECT COUNT(*) FROM comment

		<where>
			<if test="writer_name != null and writer_name != ''">
				writer_name LIKE concat('%', #{writer_name}, '%')
			</if>
		</where>
	</select>
</mapper>